real_A shape: torch.Size([4, 3, 256, 256])
noise shape: torch.Size([4, 3, 256, 256])
Y shape: torch.Size([4, 6, 1, 1])
timesteps shape: torch.Size([4])
Traceback (most recent call last):
  File "VM7_V3.py", line 464, in <module>
    noisy_A = noise_scheduler.add_noise(real_A, Y, timesteps)
  File "/home/cordun1/miniconda3/envs/vistamorph/lib/python3.8/site-packages/diffusers/schedulers/scheduling_ddpm.py", line 524, in add_noise
    noisy_samples = sqrt_alpha_prod * original_samples + sqrt_one_minus_alpha_prod * noise
RuntimeError: The size of tensor a (3) must match the size of tensor b (6) at non-singleton dimension 1



Traceback (most recent call last):
  File "VM7_V3.py", line 454, in <module>
    noisy_A = noise_scheduler.add_noise(real_A, Y, timesteps)
  File "/home/cordun1/miniconda3/envs/vistamorph/lib/python3.8/site-packages/diffusers/schedulers/scheduling_ddpm.py", line 524, in add_noise
    noisy_samples = sqrt_alpha_prod * original_samples + sqrt_one_minus_alpha_prod * noise
RuntimeError: The size of tensor a (3) must match the size of tensor b (6) at non-singleton dimension 1

 File "VM7_V3.py", line 441, in <module>
    Y = Y.expand(-1, 3, -1, -1)  # Expand Y to match the number of channels in real_A
RuntimeError: The expanded size of the tensor (3) must match the existing size (6) at non-singleton dimension 1.  Target sizes: [-1, 3, -1, -1].  Tensor sizes: [4, 6, 1, 1]
